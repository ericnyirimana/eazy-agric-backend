version: 3
jobs:
  test-locally:
    docker:
      - image: circleci/php:7.3.6-apache-stretch
    
    working_directory: ~/repo
    
    environment:
      CC_TEST_REPORTER_ID: 3b36fb234cae45c64699aaa223749a0fbcf7d052698a5d919cf1c1964f5426d7
      
    steps:
      - checkout
      - run: sudo apt-get update
      - run: sudo apt-get install -y zlib1g-dev
      - run: sudo apt-get -y install libzip-dev
      - run: sudo wget -O- http://packages.couchbase.com/ubuntu/couchbase.key | sudo apt-key add - 
      - run: sudo wget -O/etc/apt/sources.list.d/couchbase.list http://packages.couchbase.com/ubuntu/couchbase-ubuntu1204.list
      - run: sudo apt-get update
      - run: sudo apt-get -y install lsb-release
      
      - run: sudo docker-php-ext-install zip
      - run: sudo composer self-update
      - run: wget http://packages.couchbase.com/releases/couchbase-release/couchbase-release-1.0-6-amd64.deb
      - run: sudo dpkg -i couchbase-release-1.0-6-amd64.deb
      - run: sudo rm -rf /var/lib/apt/lists/*
      - run: sudo apt-get update -o Acquire::CompressionTypes::Order::=gz
      - run: sudo apt-get update
      - run: sudo apt-get install libcouchbase-dev build-essential zlib1g-dev
      - run: sudo pecl install couchbase
      - run: echo "extension=couchbase.so" | sudo tee /usr/local/etc/php/php.ini > /dev/null

      - run: composer install -n --prefer-dist
      - run: cp -fr ./.circleci/HybridRelations.php ./vendor/developermarshak/laravel-couchbase/src/Mpociot/Couchbase/Eloquent/HybridRelations.php
      - run: cp -fr ./.circleci/Model.php ./vendor/developermarshak/laravel-couchbase/src/Mpociot/Couchbase/Eloquent/Model.php
      - run:
          name: Setup Code Climate test-reporter
          command: |
            curl -L https://codeclimate.com/downloads/test-reporter/test-reporter-latest-linux-amd64 > ./cc-test-reporter
            chmod +x ./cc-test-reporter
      - run: ./cc-test-reporter before-build
      - run:
          name: run tests
          command: ./vendor/bin/phpunit --debug
      - run:
          name: Report code coverage
          command: ./cc-test-reporter after-build -t clover --exit-code $?
          

  push-image:
    docker:
      - image: google/cloud-sdk

    steps:
      - checkout
      - setup_remote_docker
      
      - run: 
          name: Build and Push
          command: |
            if [ "${CIRCLE_BRANCH}" = "dev" ]; then
              echo ${SERVICE_ACCOUNT} > ${HOME}/gcp-key.json
              docker build --build-arg db_connection="${DB_CONNECTION}" --build-arg db_host="${DB_HOST}" --build-arg db_port="${DB_PORT}" --build-arg db_database="${DB_DATABASE}" --build-arg db_username="${DB_USERNAME}" --build-arg db_password="${DB_PASSWORD}" --build-arg cache_driver="${CACHE_DRIVER}" --build-arg queue_connection="${QUEUE_CONNECTION}" --build-arg jwt_secret="${JWT_SECRET}" --build-arg frontend_url="${FRONTEND_URL}" --build-arg mj_apikey_public="${MJ_APIKEY_PUBLIC}" --build-arg mj_api_email="${MJ_API_EMAIL}" --build-arg mj_api_secret_key="${MJ_API_SECRET_KEY}" --build-arg twitter_api_key="${TWITTER_API_KEY}" --build-arg twitter_api_key_secret="${TWITTER_API_KEY_SECRET}" --build-arg twitter_access_token="${TWITTER_ACCESS_TOKEN}" --build-arg twitter_access_token_secret="${TWITTER_ACCESS_TOKEN_SECRET}" --build-arg fb_page_id="${FB_PAGE_ID}" --build-arg fb_app_id="${FB_APP_ID}" --build-arg fb_app_secret="${FB_APP_SECRET}" --build-arg fb_access_token="${FB_ACCESS_TOKEN}" --build-arg yb_api_key="${YB_API_KEY}" --build-arg yb_channel_id="${YB_CHANNEL_ID}" --rm=false -t gcr.io/${GCP_PROJECT_ID}/ezyagric-backend-image:$CIRCLE_SHA1 .
              gcloud auth activate-service-account --key-file ${HOME}/gcp-key.json
              gcloud --quiet config set project ${PROJECT_NAME}
              gcloud docker -- push gcr.io/${GCP_PROJECT_ID}/ezyagric-backend-image:$CIRCLE_SHA1
              
              gcloud --quiet config set container/cluster akorion
              gcloud config set compute/zone europe-west2-a
              export GOOGLE_APPLICATION_CREDENTIALS=${HOME}/gcp-key.json
              gcloud --quiet container clusters get-credentials akorion
              kubectl set image deployment/ezyagric-backend-andela ezyagric-backend-image-sha256=gcr.io/${GCP_PROJECT_ID}/ezyagric-backend-image:$CIRCLE_SHA1
            fi
              echo "${CIRCLE_BRANCH}"

workflows:
  version: 2
  test_and_build:
    jobs:
      - test-locally
      - push-image:
          requires:
            - test-locally
